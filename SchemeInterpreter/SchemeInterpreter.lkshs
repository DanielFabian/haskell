Version of session file format:
               1
Time of storage:
               "Thu Nov 15 11:40:02 CET 2012"
Layout:        VerticalP (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 1, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [("Browser",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 370) 260),("Debug",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 377)], paneTabs = Just BottomP, currentPage = 1, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 905) 1289
Population:    [(Just (BreakpointsSt BreakpointsState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (ErrorsSt ErrorsState),[SplitP RightP,SplitP TopP]),(Just (FilesSt FilesState),[SplitP RightP,SplitP TopP]),(Just (InfoSt (InfoState (Just (Real (RealDescr {dscName' = "LispVal", dscMbTypeStr' = Just "data LispVal\n    = Atom String |\n      List [LispVal] |\n      DottedList [LispVal] LispVal |\n      Number Integer |\n      String String |\n      Bool Bool", dscMbModu' = Just (PM {pack = PackageIdentifier {pkgName = PackageName "Interpreter", pkgVersion = Version {versionBranch = [0,0,1], versionTags = []}}, modu = ModuleName ["Parser"]}), dscMbLocation' = Just (Location {locationSLine = 31, locationSCol = 1, locationELine = 37, locationECol = 16}), dscMbComment' = Nothing, dscTypeHint' = DataDescr [SimpleDescr {sdName = "Atom", sdType = Just "Atom String", sdLocation = Just (Location {locationSLine = 32, locationSCol = 5, locationELine = 32, locationECol = 16}), sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "List", sdType = Just "List [LispVal]", sdLocation = Just (Location {locationSLine = 33, locationSCol = 7, locationELine = 33, locationECol = 21}), sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "DottedList", sdType = Just "DottedList [LispVal] LispVal", sdLocation = Just (Location {locationSLine = 34, locationSCol = 7, locationELine = 34, locationECol = 35}), sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "Number", sdType = Just "Number Integer", sdLocation = Just (Location {locationSLine = 35, locationSCol = 7, locationELine = 35, locationECol = 21}), sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "String", sdType = Just "String String", sdLocation = Just (Location {locationSLine = 36, locationSCol = 7, locationELine = 36, locationECol = 20}), sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "Bool", sdType = Just "Bool Bool", sdLocation = Just (Location {locationSLine = 37, locationSCol = 7, locationELine = 37, locationECol = 16}), sdComment = Nothing, sdExported = True}] [], dscExported' = True}))))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP BottomP]),(Just (LogSt LogState),[SplitP RightP,SplitP BottomP]),(Just (BufferSt (BufferState "/Users/dany/github/local/haskell/SchemeInterpreter/Interpreter/src/Main.hs" 435)),[SplitP LeftP]),(Just (ModulesSt (ModulesState 375 (PackageScope False,False) (Just (ModuleName ["Parser"]),Just "LispVal") (ExpanderState {packageExp = ([],[]), packageExpNoBlack = ([],[]), packageDExp = ([],[]), packageDExpNoBlack = ([],[]), workspaceExp = ([],[]), workspaceExpNoBlack = ([],[]), workspaceDExp = ([],[]), workspaceDExpNoBlack = ([],[]), systemExp = ([],[]), systemExpNoBlack = ([],[])}))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP TopP]),(Just (BufferSt (BufferState "/Users/dany/github/local/haskell/SchemeInterpreter/Interpreter/src/Parser.hs" 2447)),[SplitP LeftP]),(Just (SearchSt (SearchState {searchString = "getOptimalPath", searchScope = SystemScope, searchMode = Prefix {caseSense = False}})),[SplitP RightP,SplitP TopP]),(Just (TraceSt TraceState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (VariablesSt VariablesState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (WorkspaceSt WorkspaceState),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP TopP]),(Just (BufferSt (BufferStateTrans "_Eval.hs" ":m Data.List\n:m Sandbox\nmap (\\l@(x:_) -> (x,length l)) . group . sort $ [1,1,1,1,2,2,2,2,3,3,2,2,2,5,6,7]\nsplit [] 5\nchunkify 3 [1..10]\n:m Main\nin3 (8, 1)\n(6, 2) `canReachIn3` (7, 3)\n\nsolveRPN \"1 8 \246lkj\246lkj\"\n\nfmap negate (Prob [(3, 1%2), (5, 1%4), (9, 1%4)])\naggregatedProb flipThree\n\nreadBin \"100\"" 296)),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP TopP])]
Window size:   (2560,1440)
Completion size:
               (750,400)
Workspace:     Just "/Users/dany/github/local/haskell/SchemeInterpreter/SchemeInterpreter.lkshw"
Active pane:   Just "Parser.hs"
Toolbar visible:
               True
FindbarState:  (True,FindState {entryStr = "", entryHist = [""], replaceStr = "", replaceHist = [], caseSensitive = False, entireWord = False, wrapAround = False, regex = False, lineNr = 11})
Recently opened files:
               ["/Users/dany/github/local/haskell/SchemeInterpreter/SchemeInterpreter.lkshw","/Users/dany/.leksah-0.12/leksah-welcome/src/Main.hs"]
Recently opened workspaces:
               ["/Users/dany/leksah.lkshw"]